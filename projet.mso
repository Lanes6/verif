//etats initials Ã  actifs

machine=[PASSIF,ACTIF]{
	  etat=2;
	  init=1;
	  0=PASSIF;
	  1=ACTIF;
	  0->1 [A];
	  1->0 [P];
};;

token=[TOUSPASSIF,AACTIF,BACTIF,CACTIF]{
	etat=4;
	init=3;
	0=TOUSPASSIF;
	1=AACTIF;
	2=BACTIF;
	3=CACTIF;
	3->2 [Da];
	2->1 [Db];
	1->0 [Dc];
};;

systeme_algoA=<machine m1, machine m2, machine m3, token tk>{
	<_,_,P,Da>;
	<_,P,_,Db>;
	<P,_,_,Dc>;
	};;

systeme_algoB=<machine m1, machine m2, machine m3, token tk>{
	<_,_,P,Da>;
	<_,P,_,Db>;
	<P,_,_,Dc>;
	};;

			
solution = systeme_algoA-> (m1.PASSIF && m2.PASSIF && m3.PASSIF) && tk.TOUSPASSIF;;
todot solution_algoA.dot solution;;