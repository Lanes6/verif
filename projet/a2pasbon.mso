//Algo 2
machine=[PASSIF,ACTIF]{
	  etat=2;
	  init=1;
	  0=PASSIF;
	  1=ACTIF;
	  0->1 [GoActif];
	  1->0 [GoPassif];
	  0->0 [StayPassif];
};;

token=[M0,M1,M2,Term]{
	etat=4;
	init=2;
	0=M0;
	1=M1;
	2=M2;
	3=Term;
	2->1 [GoM1];
	1->0 [GoM0];
	0->3 [GoTerm];
	3->2 [GoM2];
};;


systeme=<machine M0, machine M1, machine M2, token Tk>{
	<_,_,GoPassif,GoM1>;
	<_,GoActif,GoPassif,GoM1>;
	<GoActif,_,GoPassif,GoM1>;
	<_,_,StayPassif,GoM1>;

	<_,GoPassif,_,GoM0>;
	<GoActif,GoPassif,_,GoM0>;
	<_,GoPassif,GoActif,GoM0>;
	<_,StayPassif,_,GoM0>;

	<GoPassif,_,_,GoTerm>;
	<GoPassif,GoActif,_,GoTerm>;
	<GoPassif,_,GoActif,GoTerm>;
	<StayPassif,_,_,GoTerm>;
	};;
todot systeme_algo2.dot systeme;;

systeme += surete <-  AF(Tk.Term && M0.PASSIF && M1.PASSIF && M2.PASSIF);;
todot systeme_algo2_surete.dot systeme;;

