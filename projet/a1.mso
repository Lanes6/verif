//Algo 1
machine=[PASSIF,ACTIF]{
	  etat=2;
	  init=1;
	  0=PASSIF;
	  1=ACTIF;
	  1->1 [StayActif,FinalActif];
	  0->1 [GoActif,FinalActif];
	  0->0 [StayPassif,FinalPassif];
	  1->0 [GoPassif,FinalPassif];
};;

token=[M0,M1,M2,Term]{
	etat=4;
	init=2;
	0=M0;
	1=M1;
	2=M2;
	3=Term;
	2->2 [Stay,StayM2];
	1->1 [Stay,StayM1];
	0->0 [Stay,StayM0];
	2->1 [GoM1];
	1->0 [GoM0];
	0->3 [GoTerm];
};;

systeme=<machine M0, machine M1, machine M2, token Tk>{
	//Une machine peut passer spontanément de active à passive (sauf quand le jeton est sur MTerm)
		<_,_,GoPassif,Stay>; //M2 Actif->Passif
		<_,GoPassif,_,Stay>; //M1 Actif->Passif
		<GoPassif,_,_,Stay>; //M0 Actif->Passif

	//Jeton passé de Mi+1 à Mi si Mi+1 est passive 
		<_,_,StayPassif,GoM1>; //Le jeton est sur M2 ET M2 est passif -> Le jeton est donné à M1
		<_,StayPassif,_,GoM0>; //Le jeton est sur M1 ET M1 est passif -> Le jeton est donné à M0
		<StayPassif,_,_,GoTerm>; //Le jeton est sur M0 ET M0 est passif -> Le jeton est donné à MTerm

	};;

//systeme += surete <- AF(Tk.Term && M0.PASSIF && M1.PASSIF && M2.PASSIF);;
//todot systeme_algo1_surete.dot systeme;;
todot systeme_algo1.dot systeme;;
