//etats initials Ã  actifs

machine=[PASSIF,ACTIF]{
	  etat=2;
	  init=1;
	  0=PASSIF;
	  1=ACTIF;
	  0->1 [A];
	  1->0 [P];
	  0->0 [PR];
};;

token=[A,B,C]{
	etat=3;
	init=0;
	0=A;
	1=B;
	2=C;
	2->1 [Db];
	1->0 [Da];
	0->2 [Dc];
};;

systeme_algoA=<machine m0, machine m1, machine m2, token tk>{
	<_,_,P,Db>;
	<P,_,_,Dc>;
	<_,P,_,Da>;
	};;

todot systeme_algoA.dot systeme_algoA;;

systeme_algoB=<machine m0, machine m1, machine m2, token tk>{
	<_,_,P,Db>;
	<_,_,PR,Db>;
	<_,A,P,Db>;
	<A,_,P,Db>;

	<P,_,_,Dc>;
	<PR,_,_,Dc>;
	<P,A,_,Dc>;
	<P,_,A,Dc>;

	<_,P,_,Da>;
	<_,PR,_,Da>;
	<A,P,_,Da>;
	<_,P,A,Da>;
	};;
todot systeme_algoB.dot systeme_algoB;;

/*
machine=[PASSIF,ACTIF]{
	  etat=2;
	  init=1;
	  0=PASSIF;
	  1=ACTIF;
	  0->1 [A];
	  1->0 [P];
	  0->0 [PR];
};;

couleur_machine=[NOIR,BLANC]{
	  etat=2;
	  init=1;
	  0=BLANC;
	  1=NOIR;
	  0->1 [B];
	  1->0 [N];
	  1->1 [B]
	  0->0 [N];
};;

token=[A,B,C]{
	etat=3;
	init=0;
	0=A;
	1=B;
	2=C;
	2->1 [Db];
	1->0 [Da];
	0->2 [Dc];
};;

systeme_algoC=<machine m0, machine m1, machine m2, token tk>{
	<_,_,P,Db>;
	<P,_,_,Dc>;
	<_,P,_,Da>;
	};;

todot systeme_algoA.dot systeme_algoA;;
*/
